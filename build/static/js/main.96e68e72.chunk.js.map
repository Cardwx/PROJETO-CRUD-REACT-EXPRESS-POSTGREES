{"version":3,"sources":["http-common.js","services/empresa.service.js","components/add-empresa.component.js","components/empresa.component.js","components/empresas-list.component.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","Content-type","empresa_service","http","get","manufacturer_cnpj","concat","data","post","put","delete","AddEmpresa","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeManufacturerName","bind","assertThisInitialized","onChangeManufacturerCnpj","saveEmpresa","newEmpresa","state","manufacture_id","manufacturer_name","submitted","e","setState","target","value","_this2","EmpresaDataService","then","response","console","log","catch","react_default","a","createElement","className","onClick","htmlFor","type","id","required","onChange","name","Component","Empresa","onChangeTitle","onChangeDescription","getEmpresa","updatePublished","updateEmpresa","deleteEmpresa","currentEmpresa","manufacturer_fantasy_name","manufacturer_social_name","manufacturer_active","manufacturer_site","manufacturer_country","manufacturer_city","manufacturer_bairro","published","message","match","params","prevState","objectSpread","status","_this3","update","_this4","_this5","history","push","_this6","title","description","EmpresasList","onChangeSearchTitle","retrieveEmpresas","refreshList","setActiveEmpresa","removeAllEmpresas","searchTitle","empresas","currentIndex","getAll","empresa","index","deleteAll","findByTitle","_this$state","placeholder","map","key","react_router_dom","to","App","react_router","exact","path","component","TutorialsList","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.96e68e72.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:8080/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\nclass EmpresaDataService {\r\n  getAll() {\r\n    return http.get(\"/empresas\");\r\n  }\r\n  get(manufacturer_cnpj) {\r\n    return http.get(`/empresas/${manufacturer_cnpj}`);\r\n  }\r\n  create(data) {\r\n    return http.post(\"/empresas\", data);\r\n  }\r\n  update(manufacturer_cnpj, data) {\r\n    return http.put(`/empresas/${manufacturer_cnpj}`, data);\r\n  }\r\n  delete(manufacturer_cnpj) {\r\n    return http.delete(`/empresas/${manufacturer_cnpj}`);\r\n  }\r\n  deleteAll() {\r\n    return http.delete(`/empresas`);\r\n  }\r\n  findByTitle(manufacturer_cnpj) {\r\n    return http.get(`/empresas?title=${manufacturer_cnpj}`);\r\n  }\r\n}\r\nexport default new EmpresaDataService();","import React, { Component } from \"react\";\r\nimport EmpresaDataService from \"../services/empresa.service\";\r\n\r\nexport default class AddEmpresa extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeManufacturerName = this.onChangeManufacturerName.bind(this);\r\n    this.onChangeManufacturerCnpj = this.onChangeManufacturerCnpj.bind(this);\r\n\r\n \r\n    /*\r\n    this.onChangeManufacturerFantasyName = this.onChangeManufacturerFantasyName.bind(this);\r\n    this.onChangeManufacturerSocialName = this.onChangeManufacturerSocialName.bind(this);\r\n    this.onChangeManufacturerActive = this.onChangeManufacturerActive.bind(this);\r\n    this.onChangeManufacturerSite = this.onChangeManufacturerSite.bind(this);\r\n    this.onChangeManufacturerCountry = this.onChangeManufacturerCountry.bind(this);\r\n    this.onChangeManufacturerCity = this.onChangeManufacturerCity.bind(this);\r\n    this.onChangeManufacturerBairro = this.onChangeManufacturerBairro.bind(this);\r\n    */\r\n    this.saveEmpresa = this.saveEmpresa.bind(this);\r\n    this.newEmpresa = this.newEmpresa.bind(this);\r\n\r\n\r\n    this.state = {\r\n      manufacture_id: null,\r\n      manufacturer_name: \"\",\r\n      manufacturer_cnpj : \"\", /*\r\n      manufacturer_fantasy_name  : \"\",\r\n      manufacturer_social_name  : \"\",\r\n      manufacturer_active  : \"\",\r\n      manufacturer_site  : \"\",\r\n      manufacturer_country  : \"\",\r\n      manufacturer_city  : \"\",\r\n      manufacturer_bairro   : \"\",\r\n      */\r\n      submitted: false\r\n    };\r\n  }\r\n// realiza alterações se necessário\r\n// nome empresa\r\n  onChangeManufacturerName(e) {\r\n    this.setState({\r\n      manufacturer_name: e.target.value,\r\n    \r\n    });\r\n  }\r\n\r\n   // altera cnpj\r\n   onChangeManufacturerCnpj(e){\r\n    this.setState({manufacturer_cnpj: e.target.value,});}\r\n    /*\r\n      manufacturer_cnpj: e.target.value,\r\n      manufacturer_fantasy_name: e.target.value,\r\n      manufacturer_social_name: e.target.value,\r\n      manufacturer_active: e.target.value,\r\n      manufacturer_site: e.target.value,\r\n      manufacturer_country: e.target.value,\r\n      manufacturer_city: e.target.value,\r\n      manufacturer_bairro: e.target.value*/\r\n\r\n \r\n    /*\r\n  // altera nome fantasia\r\n  onChangeManufacturerFantasyName(e){\r\n    this.setState({manufacturer_fantasy_name: e.target.value,});}\r\n\r\n  //altera nome social\r\n  onChangeManufacturerSocialName(e){\r\n    this.setState({manufacturer_social_name: e.target.value,});}\r\n\r\n    //altera se está ativa ou não\r\n  onChangeManufacturerActive(e){\r\n    this.setState({manufacturer_active: e.target.value,});}\r\n\r\n    //altera site\r\n  onChangeManufacturerSite(e){\r\n    this.setState({manufacturer_site: e.target.value,});}\r\n    //altera pais\r\n  onChangeManufacturerCountry(e){\r\n    this.setState({manufacturer_country: e.target.value,});}\r\n    //altera cidade\r\n  onChangeManufacturerCity(e){\r\n    this.setState({manufacturer_city: e.target.value,});}\r\n    //altera bairro\r\n  onChangeManufacturerBairro(e){\r\n    this.setState({manufacturer_bairro: e.target.value,});}\r\n   */\r\n  saveEmpresa() {\r\n    var data = {\r\n      /*title: this.state.title,\r\n      description: this.state.description*/\r\n      manufacture_id: this.state.manufacture_id,\r\n      manufacturer_name: this.state.manufacturer_name,\r\n      manufacturer_cnpj: this.state.manufacturer_cnpj\r\n      /*\r\n      manufacturer_fantasy_name: this.state.manufacturer_fantasy_name,\r\n      manufacturer_social_name: this.state.manufacturer_social_name,\r\n      manufacturer_active: this.state.manufacturer_active,\r\n      manufacturer_site: this.state.manufacturer_site,\r\n      manufacturer_country: this.state.manufacturer_country,\r\n      manufacturer_city: this.state.manufacturer_city,\r\n      manufacturer_bairro: this.state.manufacturer_bairro,\r\n      */\r\n    };\r\n\r\n    EmpresaDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          /*\r\n          id: response.data.id,\r\n          title: response.data.title,\r\n          description: response.data.description,\r\n          published: response.data.published,*/\r\n          manufacture_id: response.data.manufacture_id,\r\n          manufacturer_name: response.data.manufacturer_name,\r\n          manufacturer_cnpj: response.data.manufacturer_cnpj,\r\n         /* manufacturer_fantasy_name: response.data.manufacturer_fantasy_name,\r\n          manufacturer_social_name: response.data.manufacturer_social_name,\r\n          manufacturer_active: response.data.manufacturer_active,\r\n          manufacturer_site: response.data.manufacturer_site,\r\n          manufacturer_country: response.data.manufacturer_country,\r\n          manufacturer_city: response.data.manufacturer_city,\r\n          manufacturer_bairro: response.data.manufacturer_bairro,\r\n          */\r\n\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newEmpresa() {\r\n    this.setState({\r\n      manufacture_id: null,\r\n      manufacturer_name: \"\",\r\n      manufacturer_cnpj : \"\", \r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newEmpresa}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"manufacturer_name\">Nome da empresa:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"manufacturer_name\"\r\n                required\r\n                value={this.state.manufacturer_name}\r\n                onChange={this.onChangeManufacturerName}\r\n                name=\"manufacturer_name\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"manufacturer_cnpj\">CNPJ:</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"manufacturer_cnpj\"\r\n                required\r\n                value={this.state.manufacturer_cnpj}\r\n                onChange={this.onChangeManufacturerCnpj}\r\n                name=\"manufacturer_cnpj\"\r\n              />\r\n            </div>\r\n             {/*\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"manufacturer_fantasy_name\">Nome Fantasia:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"manufacturer_fantasy_name\"\r\n                required\r\n                value={this.state.manufacturer_fantasy_name}\r\n                onChange={this.onChangeManufacturerFantasyName}\r\n                name=\"manufacturer_fantasy_name\"\r\n              />\r\n            </div>\r\n            THIS ONE IS A VALID COMMENT \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"manufacturer_social_name\">Nome Social:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"manufacturer_social_name\"\r\n                required\r\n                value={this.state.manufacturer_social_name}\r\n                onChange={this.onChangeManufacturerSocialName}\r\n                name=\"manufacturer_social_name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"manufacturer_active\">CNPJ Ativo?</label>\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-control\"\r\n                id=\"manufacturer_active\"\r\n                required\r\n                value={this.state.manufacturer_active}\r\n                onChange={this.onChangeManufacturerActive}\r\n                name=\"manufacturer_active\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"manufacturer_site\">Site:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"manufacturer_site\"\r\n                required\r\n                value={this.state.manufacturer_site}\r\n                onChange={this.onChangeManufacturerSite}\r\n                name=\"manufacturer_site\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"manufacturer_country\">País:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"manufacturer_country\"\r\n                required\r\n                value={this.state.manufacturer_country}\r\n                onChange={this.onChangeManufacturerCountry}\r\n                name=\"manufacturer_country\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"manufacturer_city\">Cidade:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"manufacturer_city\"\r\n                required\r\n                value={this.state.manufacturer_city}\r\n                onChange={this.onChangeManufacturerCity}\r\n                name=\"manufacturer_city\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"manufacturer_bairro\">bairro:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"manufacturer_bairro\"\r\n                required\r\n                value={this.state.manufacturer_bairro}\r\n                onChange={this.onChangeManufacturerBairro}\r\n                name=\"manufacturer_bairro\"\r\n              />\r\n            </div>\r\n            */}\r\n            <button onClick={this.saveEmpresa} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport EmpresaDataService from \"../services/empresa.service\";\r\n\r\nexport default class Empresa extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.getEmpresa = this.getEmpresa.bind(this);\r\n    this.updatePublished = this.updatePublished.bind(this);\r\n    this.updateEmpresa = this.updateEmpresa.bind(this);\r\n    this.deleteEmpresa = this.deleteEmpresa.bind(this);\r\n\r\n    this.state = {\r\n      currentEmpresa: {\r\n        manufacture_id: null,\r\n        manufacturer_name: \"\",\r\n        manufacturer_cnpj : \"\", \r\n        manufacturer_fantasy_name  : \"\",\r\n        manufacturer_social_name  : \"\",\r\n        manufacturer_active  : \"\",\r\n        manufacturer_site  : \"\",\r\n        manufacturer_country  : \"\",\r\n        manufacturer_city  : \"\",\r\n        manufacturer_bairro   : \"\",\r\n        published: false,\r\n  \r\n        submitted: false\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getEmpresa(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeCnpj(e) {\r\n    const manufacturer_cnpj = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentEmpresa: {\r\n          ...prevState.currentEmpresa,\r\n          manufacturer_cnpj: manufacturer_cnpj\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeName(e) {\r\n    const manufacturer_name = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentEmpresa: {\r\n        ...prevState.currentEmpresa,\r\n        manufacturer_name: manufacturer_name\r\n      }\r\n    }));\r\n  }\r\n\r\n  getEmpresa(id) {\r\n    EmpresaDataService.get(id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentEmpresa: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updatePublished(status) {\r\n    var data = {\r\n      manufacture_id: this.state.manufacture_id,\r\n      manufacturer_name: this.state.manufacturer_name,\r\n      manufacturer_cnpj: this.state.manufacturer_cnpj,\r\n      manufacturer_fantasy_name: this.state.manufacturer_fantasy_name,\r\n      manufacturer_social_name: this.state.manufacturer_social_name,\r\n      manufacturer_active: this.state.manufacturer_active,\r\n      manufacturer_site: this.state.manufacturer_site,\r\n      manufacturer_country: this.state.manufacturer_country,\r\n      manufacturer_city: this.state.manufacturer_city,\r\n      manufacturer_bairro: this.state.manufacturer_bairro,\r\n      published: status\r\n    };\r\n\r\n    EmpresaDataService.update(this.state.currentEmpresa.id, data)\r\n      .then(response => {\r\n        this.setState(prevState => ({\r\n          currentEmpresa: {\r\n            ...prevState.currentEmpresa,\r\n            published: status\r\n          }\r\n        }));\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateEmpresa() {\r\n    EmpresaDataService.update(\r\n      this.state.currentEmpresa.id,\r\n      this.state.currentEmpresa\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"A empresa foi adicionado com sucesso! \"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteEmpresa() {    \r\n    EmpresaDataService.delete(this.state.currentEmpresa.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/empresas')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentEmpresa } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentEmpresa ? (\r\n          <div className=\"edit-form\">\r\n            <h4>Adicione as empresas:</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Nome Empresa</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  value={currentEmpresa.title}\r\n                  onChange={this.onChangeTitle}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  value={currentEmpresa.description}\r\n                  onChange={this.onChangeDescription}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Status:</strong>\r\n                </label>\r\n                {currentEmpresa.published ? \"Published\" : \"Pending\"}\r\n              </div>\r\n            </form>\r\n\r\n            {currentEmpresa.published ? (\r\n              <button\r\n                className=\"badge badge-primary mr-2\"\r\n                onClick={() => this.updatePublished(false)}\r\n              >\r\n                UnPublish\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"badge badge-primary mr-2\"\r\n                onClick={() => this.updatePublished(true)}\r\n              >\r\n                Publish\r\n              </button>\r\n            )}\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteEmpresa}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateEmpresa}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n           \r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport EmpresaDataService from \"../services/empresa.service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class EmpresasList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\r\n    this.retrieveEmpresas = this.retrieveEmpresas.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveEmpresa = this.setActiveEmpresa.bind(this);\r\n    this.removeAllEmpresas = this.removeAllEmpresas.bind(this);\r\n    this.searchTitle = this.searchTitle.bind(this);\r\n\r\n    this.state = {\r\n      empresas: [],\r\n      currentEmpresa: null,\r\n      currentIndex: -1,\r\n      searchTitle: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveEmpresas();\r\n  }\r\n\r\n  onChangeSearchTitle(e) {\r\n    const searchTitle = e.target.value;\r\n\r\n    this.setState({\r\n      searchTitle: searchTitle\r\n    });\r\n  }\r\n\r\n  retrieveEmpresas() {\r\n    EmpresaDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          empresas: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveEmpresas();\r\n    this.setState({\r\n      currentEmpresa: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveEmpresa(empresa, index) {\r\n    this.setState({\r\n      currentEmpresa: empresa,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  removeAllEmpresas() {\r\n    EmpresaDataService.deleteAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  searchTitle() {\r\n    this.setState({\r\n      currentEmpresa: null,\r\n      currentIndex: -1\r\n    });\r\n\r\n    EmpresaDataService.findByTitle(this.state.searchTitle)\r\n      .then(response => {\r\n        this.setState({\r\n          empresas: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { searchTitle, empresas, currentEmpresa, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search by title\"\r\n              value={searchTitle}\r\n              onChange={this.onChangeSearchTitle}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.searchTitle}\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>empresas List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {empresas &&\r\n              empresas.map((empresa, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveEmpresa(empresa, index)}\r\n                  key={index}\r\n                >\r\n                  {empresa.title}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          <button\r\n            className=\"m-3 btn btn-sm btn-danger\"\r\n            onClick={this.removeAllEmpresas}\r\n          >\r\n            Remove All\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentEmpresa ? (\r\n            <div>\r\n              <h4>empresa</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Title:</strong>\r\n                </label>{\" \"}\r\n                {currentEmpresa.title}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Description:</strong>\r\n                </label>{\" \"}\r\n                {currentEmpresa.description}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Status:</strong>\r\n                </label>{\" \"}\r\n                {currentEmpresa.published ? \"Published\" : \"Pending\"}\r\n              </div>\r\n\r\n              <Link\r\n                to={\"/empresas/\" + currentEmpresa.id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Edit\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a empresa...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport AddEmpresa from \"./components/add-empresa.component\";\r\nimport Empresa from \"./components/empresa.component\";\r\nimport TutorialsList from \"./components/empresas-list.component\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <Link to={\"/empresas\"} className=\"navbar-brand\">\r\n            \r\n          </Link>\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/empresas\"} className=\"nav-link\">\r\n                Empresas Cadastradas\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/add\"} className=\"nav-link\">\r\n                Adicionar uma nova Empresa\r\n              </Link>\r\n            </li>\r\n          </div>\r\n        </nav>\r\n\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n            <Route exact path={[\"/\", \"/empresas\"]} component={TutorialsList} />\r\n            <Route exact path=\"/add\" component={AddEmpresa} />\r\n            <Route path=\"/empresas/:id\" component={Empresa} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}